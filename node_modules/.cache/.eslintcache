[{"/Users/angelinakoloska/codecademy/16_flashcards_AK/src/index.js":"1","/Users/angelinakoloska/codecademy/16_flashcards_AK/src/app/store.js":"2","/Users/angelinakoloska/codecademy/16_flashcards_AK/src/app/App.js":"3","/Users/angelinakoloska/codecademy/16_flashcards_AK/src/app/routes.js":"4","/Users/angelinakoloska/codecademy/16_flashcards_AK/src/components/NewQuizForm.js":"5","/Users/angelinakoloska/codecademy/16_flashcards_AK/src/components/NewTopicForm.js":"6","/Users/angelinakoloska/codecademy/16_flashcards_AK/src/features/topics/Topics.js":"7","/Users/angelinakoloska/codecademy/16_flashcards_AK/src/features/topics/Topic.js":"8","/Users/angelinakoloska/codecademy/16_flashcards_AK/src/features/quizzes/Quiz.js":"9","/Users/angelinakoloska/codecademy/16_flashcards_AK/src/features/quizzes/Quizzes.js":"10","/Users/angelinakoloska/codecademy/16_flashcards_AK/src/data/icons.js":"11","/Users/angelinakoloska/codecademy/16_flashcards_AK/src/features/cards/Card.js":"12","/Users/angelinakoloska/codecademy/16_flashcards_AK/src/features/topics/topicsSlice.js":"13","/Users/angelinakoloska/codecademy/16_flashcards_AK/src/features/quizzes/quizSlice.js":"14","/Users/angelinakoloska/codecademy/16_flashcards_AK/src/features/cards/cardsSlice.js":"15"},{"size":321,"mtime":1615233957000,"results":"16","hashOfConfig":"17"},{"size":192,"mtime":1680155312623,"results":"18","hashOfConfig":"17"},{"size":1966,"mtime":1615233957000,"results":"19","hashOfConfig":"17"},{"size":264,"mtime":1615233941000,"results":"20","hashOfConfig":"17"},{"size":3381,"mtime":1680239913840,"results":"21","hashOfConfig":"17"},{"size":1692,"mtime":1680155587452,"results":"22","hashOfConfig":"17"},{"size":1144,"mtime":1680155453128,"results":"23","hashOfConfig":"17"},{"size":998,"mtime":1615233957000,"results":"24","hashOfConfig":"17"},{"size":746,"mtime":1680159236636,"results":"25","hashOfConfig":"17"},{"size":779,"mtime":1680241373075,"results":"26","hashOfConfig":"17"},{"size":3601,"mtime":1615233957000,"results":"27","hashOfConfig":"17"},{"size":470,"mtime":1615233941000,"results":"28","hashOfConfig":"17"},{"size":776,"mtime":1680241075614,"results":"29","hashOfConfig":"17"},{"size":695,"mtime":1680241423194,"results":"30","hashOfConfig":"17"},{"size":586,"mtime":1680241088976,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"o0965m",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/angelinakoloska/codecademy/16_flashcards_AK/src/index.js",[],["67","68"],"/Users/angelinakoloska/codecademy/16_flashcards_AK/src/app/store.js",[],"/Users/angelinakoloska/codecademy/16_flashcards_AK/src/app/App.js",[],"/Users/angelinakoloska/codecademy/16_flashcards_AK/src/app/routes.js",[],"/Users/angelinakoloska/codecademy/16_flashcards_AK/src/components/NewQuizForm.js",["69"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\nimport { addCard } from \"../features/cards/cardsSlice\";\nimport { addQuizThunk } from \"../features/quizzes/quizSlice\";\nimport { selectTopics } from \"../features/topics/topicsSlice\";\n\nexport default function NewQuizForm() {\n  const [name, setName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [topicId, setTopicId] = useState(\"\");\n  const history = useHistory();\n  const topics = useSelector(selectTopics);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n\n    const cardIds = [];\n\n    // create the new cards here and add each card's id to cardIds\n    cards.map((card, i) => {\n      const unid = uuidv4();\n      cardIds.push(unid)\n      dispatch(\n        addCard({\n          id: unid,\n          front: cards[i].front,\n          back: cards[i].back\n        })\n      )\n    }) \n    // create the new quiz here\n    dispatch(\n      addQuizThunk({\n        name: name,\n        topicId: topicId,\n        cardIds: cardIds,\n        id: uuidv4()\n      })\n    )\n\n    history.push(ROUTES.quizzesRoute());\n  };\n\n  const addCardInputs = (e) => {\n    e.preventDefault();\n    setCards(cards.concat({ front: \"\", back: \"\" }));\n  };\n\n  const removeCard = (e, index) => {\n    e.preventDefault();\n    setCards(cards.filter((card, i) => index !== i));\n  };\n\n  const updateCardState = (index, side, value) => {\n    const newCards = cards.slice();\n    newCards[index][side] = value;\n    setCards(newCards);\n  };\n\n  return (\n    <section>\n      <h1>Create a new quiz</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          id=\"quiz-name\"\n          value={name}\n          onChange={(e) => setName(e.currentTarget.value)}\n          placeholder=\"Quiz Title\"\n        />\n        <select\n          id=\"quiz-topic\"\n          onChange={(e) => setTopicId(e.currentTarget.value)}\n          placeholder=\"Topic\"\n        >\n          <option value=\"\">Topic</option>\n          {Object.values(topics).map((topic) => (\n            <option key={topic.id} value={topic.id}>\n              {topic.name}\n            </option>\n          ))}\n        </select>\n        {cards.map((card, index) => (\n          <div key={index} className=\"card-front-back\">\n            <input\n              id={`card-front-${index}`}\n              value={cards[index].front}\n              onChange={(e) =>\n                updateCardState(index, \"front\", e.currentTarget.value)\n              }\n              placeholder=\"Front\"\n            />\n\n            <input\n              id={`card-back-${index}`}\n              value={cards[index].back}\n              onChange={(e) =>\n                updateCardState(index, \"back\", e.currentTarget.value)\n              }\n              placeholder=\"Back\"\n            />\n\n            <button\n              onClick={(e) => removeCard(e, index)}\n              className=\"remove-card-button\"\n            >\n              Remove Card\n            </button>\n          </div>\n        ))}\n        <div className=\"actions-container\">\n          <button onClick={addCardInputs}>Add a Card</button>\n          <button>Create Quiz</button>\n        </div>\n      </form>\n    </section>\n  );\n}\n","/Users/angelinakoloska/codecademy/16_flashcards_AK/src/components/NewTopicForm.js",[],"/Users/angelinakoloska/codecademy/16_flashcards_AK/src/features/topics/Topics.js",["70"],"import NewTopicForm from \"../../components/NewTopicForm\";\nimport { Link } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\nimport { useSelector } from \"react-redux\";\nimport { selectTopics } from \"./topicsSlice\";\n\nexport default function Topics() {\n  const topics = useSelector(selectTopics); // replace this with a call to your selector to select all the topics in state\n\n  return (\n    <section className=\"center\">\n      <h1>Topics</h1>\n      <ul className=\"topics-list\">\n        {Object.values(topics).map((topic) => (\n          <li className=\"topic\" key={topic.id}>\n          <Link to={ROUTES.topicRoute(topic.id)} className=\"topic-link\">\n           <div className=\"topic-container\">\n             <img src={topic.icon} alt=\"\" />\n             <div className=\"text-content\">\n               <h2>{topic.name}</h2>\n               <p>{topic.quizIds.length} Quizzes</p>\n             </div>\n           </div>\n         </Link>\n          </li>\n        ))}\n      </ul>\n      <Link\n        to={ROUTES.newTopicRoute()}\n        className=\"button create-new-topic-button\"\n      >\n        Create New Topic\n      </Link>\n    </section>\n  );\n}\n","/Users/angelinakoloska/codecademy/16_flashcards_AK/src/features/topics/Topic.js",["71"],"import NewTopicForm from \"../../components/NewTopicForm\";\nimport { Link, useParams } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\n\nexport default function Topic() {\n  const topics = {}; // replace this with a call to your selector to select all the topics in state\n  const quizzes = {}; // replace this with a call to your selector to select all the quizzes in state\n  let { topicId } = useParams();\n  const topic = topics[topicId];\n  const quizzesForTopic = topic.quizIds.map((quizId) => quizzes[quizId]);\n\n  return (\n    <section>\n      <img src={topic.icon} alt=\"\" className=\"topic-icon\" />\n      <h1>Topic: {topic.name}</h1>\n      <ul className=\"quizzes-list\">\n        {quizzesForTopic.map((quiz) => (\n          <li className=\"quiz\" key={quiz.id}>\n            <Link to={ROUTES.quizRoute(quiz.id)}>{quiz.name}</Link>\n          </li>\n        ))}\n      </ul>\n      <Link to=\"/quizzes/new\" className=\"button center\">\n        Create a New Quiz\n      </Link>\n    </section>\n  );\n}\n","/Users/angelinakoloska/codecademy/16_flashcards_AK/src/features/quizzes/Quiz.js",[],"/Users/angelinakoloska/codecademy/16_flashcards_AK/src/features/quizzes/Quizzes.js",[],"/Users/angelinakoloska/codecademy/16_flashcards_AK/src/data/icons.js",[],"/Users/angelinakoloska/codecademy/16_flashcards_AK/src/features/cards/Card.js",["72","73"],"import React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\n\nexport default function Card({ id }) {\n  const cards = {}; // replace this with a call to your selector to get all the cards in state\n  const card = cards[id];\n  const [flipped, setFlipped] = useState(false);\n\n  return (\n    <li>\n      <button className=\"card\" onClick={(e) => setFlipped(!flipped)}>\n        {flipped ? card.back : card.front}\n      </button>\n    </li>\n  );\n}\n","/Users/angelinakoloska/codecademy/16_flashcards_AK/src/features/topics/topicsSlice.js",[],"/Users/angelinakoloska/codecademy/16_flashcards_AK/src/features/quizzes/quizSlice.js",[],"/Users/angelinakoloska/codecademy/16_flashcards_AK/src/features/cards/cardsSlice.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":27,"column":25,"nodeType":"80","messageId":"81","endLine":27,"endColumn":27},{"ruleId":"82","severity":1,"message":"83","line":1,"column":8,"nodeType":"84","messageId":"85","endLine":1,"endColumn":20},{"ruleId":"82","severity":1,"message":"83","line":1,"column":8,"nodeType":"84","messageId":"85","endLine":1,"endColumn":20},{"ruleId":"82","severity":1,"message":"86","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":14},{"ruleId":"82","severity":1,"message":"87","line":2,"column":16,"nodeType":"84","messageId":"85","endLine":2,"endColumn":25},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'NewTopicForm' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useParams' is defined but never used.","no-global-assign","no-unsafe-negation"]